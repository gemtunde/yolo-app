{"version":3,"sources":["store/actions/types.js","store/reducers/courseReducers.js","store/reducers/errorReducers.js","store/reducers/bscscanReducers.js","store/reducers/index.js","store/store.js","component/Home.js","store/actions/bscscanAction.js","store/actions/errorAction.js","component/Courses/AdminCourse.js","store/actions/courseAction.js","component/Courses/Courses.js","component/AppNavbar.js","component/Courses/UpdateCourse.js","component/Views/ViewCourse.js","App.js","index.js"],"names":["ADD_COURSE","DELETE_COURSE","COURSE_CREATED","UPDATE_COURSE","GET_ERRORS","CLEAR_ERRORS","FETCH_ALL","FETCH_FAIL","initialState","loading","course","created","updated","deleted","courseReducer","state","action","type","payload","intialState","msg","status","id","errorReducer","yolo_token","error","rootReducer","combineReducers","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Home","dispatch","useDispatch","useEffect","axios","get","then","data","catch","err","useSelector","console","log","returnErrors","avatar","AvatarGenerator","generateRandomAvatar","AdminCourse","useState","courseName","setCourseName","price","setPrice","description","setDescription","errMsg","errID","location","href","className","src","alt","onSubmit","e","preventDefault","courseStudents","tags","document","querySelectorAll","i","length","push","getAttribute","name","a","config","headers","body","JSON","stringify","post","response","createCourse","htmlFor","placeholder","value","onChange","target","rows","style","color","marginTop","Courses","class","maxWwidth","map","course_name","video","width","height","controls","toUpperCase","substring","to","AppNavbar","UpdateStudent","s_slug","useParams","slug","student","courseDetail","filter","input1","querySelector","studentList","student_course","student_name","includes","toLowerCase","std","undefined","Tagify","whitelist","dropdown","classname","enabled","maxItems","position","closeOnSelect","highlightFirst","uid","put","updateACourse","students","method","course_students","block","ViewCourse","setCourseStudents","onDelete","delete","course_id","deleteCourse","c","onClick","res","App","path","exact","component","UpdateCourse","ReactDOM","render","StrictMode","getElementById"],"mappings":"mRAEaA,EAAa,aACbC,EAAgB,gBAEhBC,EAAiB,iBACjBC,EAAgB,gBAMhBC,EAAa,aACbC,EAAe,eAIfC,EAAY,YACZC,EAAa,aCfpBC,EAAe,CAEjBC,SAAQ,EACRC,OAAO,GACPC,SAAS,EACTC,SAAU,EACVC,SAAU,GA+BCC,EA5BO,WAAgC,IAA/BC,EAA8B,uDAAxBP,EAAcQ,EAAU,uCAEjD,OAAOA,EAAOC,MAEN,KAAKjB,EACD,kCACOe,GADP,IAEIL,OAAO,GAAD,mBAAKK,EAAML,QAAX,YAAqBM,EAAOE,YAE1C,KAAKhB,EACD,OAAO,2BACAa,GADP,IAEIJ,SAAU,IAElB,KAAKR,EACD,OAAO,2BACAY,GADP,IAEIH,SAAU,IAElB,KAAKX,EACD,kCACOc,GADP,IAEIF,SAAU,IAElB,QACG,OAAWE,ICjCpBI,EAAc,CAChBC,IAAI,GACJC,OAAS,KACTC,GAAG,MAyBQC,MAtBd,WAAoD,IAA7BR,EAA4B,uDAApBI,EAAaH,EAAO,uCAChD,OAAOA,EAAOC,MAEV,KAAKb,EACD,MAAM,CACFgB,IAAIJ,EAAOE,QAAQE,IACnBC,OAAOL,EAAOE,QAAQH,MACtBO,GAAKN,EAAOE,QAAQI,IAGxB,KAAKjB,EACD,MAAM,CACFe,IAAI,GACJC,OAAS,KACTC,GAAG,MAGf,QACI,OAAOP,ICxBbP,EAAe,CACjBgB,WAAa,GACbC,MAAQ,ICILC,EAAcC,YAAgB,CAElCjB,OAAQI,EACRW,MAAOF,EACPC,WDNyB,WAAkC,IAAjCT,EAAgC,uDAAxBP,EAAcQ,EAAU,uCACzD,OAAOA,EAAOC,MACV,KAAKX,EACJ,OAAO,2BACAS,GADP,IAEIS,WAAWR,EAAOE,UAGtB,KAAKX,EACF,OAAO,2BACAQ,GADP,IAEIU,MAAQT,EAAOS,QAEtB,QACA,OAAOV,MCLDW,ICXTE,EAAa,CAACC,KAEdC,EAAmBC,OAAOC,sCAAwCC,IAQzDC,EANDC,YACVT,EAPiB,GASjBI,EAAiBM,IAAe,WAAf,EAAmBR,K,sDCqCzBS,MA3Cf,WAEI,IAAMC,EAAWC,cAEjBC,qBAAU,WACNF,GCPG,SAACA,GACNG,IAGGC,IAAI,yFACJC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAS,CAAErB,KAAMX,EAAWY,QAAS0B,OACxDC,OAAM,SAACC,GAAD,OAASR,EAAS,CAAErB,KAAMV,EAAYkB,MAAOqB,YDErD,IAGH,IAAOtB,EAAcuB,aAAY,SAAChC,GAAD,OAASA,EAAMS,cAAzCA,WAOP,OAFAwB,QAAQC,IAAIzB,GAGR,yB,yBEtBK0B,EAAe,SAAC9B,GAAyB,IAApBE,EAAmB,uDAAhB,KAAMD,EAAU,uCAC7C,MAAM,CACFJ,KAAOb,EACPc,QAAU,CAACE,MAAKC,SAAQC,Q,QCE9B6B,GADY,IAAIC,mBACGC,uBAuGVC,EArGK,WAClB,IAAMhB,EAAWC,cAEjB,EAAoCgB,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEA,EAAmCd,aAAY,SAAChC,GAAD,OAAWA,EAAMU,SAAnDqC,EAAb,EAAQ1C,IAAiB2C,EAAzB,EAAqBzC,GACbX,EAAYoC,aAAY,SAAChC,GAAD,OAAWA,EAAML,UAAzCC,QAER6B,qBAAU,WAEJ7B,IACFoB,OAAOiC,SAASC,KAAO,cAExB,CAACtD,IAgBJ,OACE,qBAAKuD,UAAU,YAAf,SAEE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKC,IAAKhB,EAAQiB,IAAI,WAEtB,6CAGF,qBAAKF,UAAU,wBAAf,SACE,uBAAYG,SAzBH,SAACC,GAChBA,EAAEC,iBAIF,IAFA,IAAIC,EAAiB,GACfC,EAAOC,SAASC,iBAAiB,gBAC9BC,EAAI,EAAGA,GAAKH,EAAKI,OAAQD,IAC5BH,EAAKG,IACPJ,EAAeM,KAAKL,EAAKG,GAAGG,aAAa,UAI7CzC,EC3BwB,SAAC,GAAD,IAAG0C,EAAH,EAAGA,KAAMtB,EAAT,EAASA,MAAOE,EAAhB,EAAgBA,YAAhB,8CAAiC,WAAMtB,GAAN,iBAAA2C,EAAA,6DAG3CC,EAAQ,CACVC,QAAU,CACN,eAAiB,qBAInBC,EAAOC,KAAKC,UAAU,CAACN,OAAMtB,QAAOE,gBATO,SAU5CnB,IACJ8C,KAAK,qBAAqBH,EAAMF,GAChCvC,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACJN,EAAS,CAACrB,KAAOZ,IACjBiC,EAAS,CAACrB,KAAKjB,EAAYkB,QAAQ,CAAE0B,KACrCN,EAAS,CAACrB,KAAOf,OAEpB2C,OAAM,SAAAC,GACCR,EAAS,CAACrB,KVxBH,gBUyBPqB,EACIY,EAAaJ,EAAI0C,SAAS5C,KAAKxB,IAAK0B,EAAI0C,SAASnE,YApBZ,2CAAjC,sDD2BfoE,CAAa,CAAET,KAAMxB,EAAYE,MAAMA,EAAOE,YAAcA,MAc/D,UACE,sBAAKM,UAAU,aAAf,UACE,uBAAOwB,QAAQ,OAAf,mBACA,uBACEzE,KAAK,OACL+D,KAAK,aACL1D,GAAG,aACHqE,YAAY,QACZzB,UAAU,OACV0B,MAAOpC,EACPqC,SAAU,SAACvB,GAAD,OAAOb,EAAca,EAAEwB,OAAOF,aAG5C,sBAAK1B,UAAU,aAAf,UACE,uBAAOwB,QAAQ,OAAf,mBACA,uBACEzE,KAAK,OACL+D,KAAK,aACL1D,GAAG,aACHqE,YAAY,QACZzB,UAAU,OACV0B,MAAOlC,EACPmC,SAAU,SAACvB,GAAD,OAAOX,EAASW,EAAEwB,OAAOF,aAGvC,sBAAK1B,UAAU,aAAf,UACE,uBAAOwB,QAAQ,OAAf,yBACA,0BACEzE,KAAK,OACL+D,KAAK,aAELe,KAAM,EACNzE,GAAG,aACHqE,YAAY,cACZzB,UAAU,OACV0B,MAAOhC,EACPiC,SAAU,SAACvB,GAAD,OAAOT,EAAeS,EAAEwB,OAAOF,aAIlC,kBAAV7B,EACC,qBACEG,UAAU,WACV8B,MAAO,CAAEC,MAAO,MAAOC,UAAW,QAFpC,SAIGpC,IAED,KAEJ,wBAAQmC,MAAM,OAAOD,MAAO,CAAEE,UAAW,QAAzC,sCE7CGC,EApDC,WACd,IAAQzF,EAAWqC,aAAY,SAAChC,GAAD,OAAWA,EAAML,UAAxCA,OAER,OACE,mCACCA,EAAOmE,OAAS,EAGf,qBAAKuB,MAAM,YAAYJ,MAAO,CAACK,UAAW,KAA1C,SACS3F,EAAO4F,KAAI,WAA6ChF,GAAQ,IAAlDiF,EAAiD,EAAjDA,YAAa3C,EAAoC,EAApCA,YAAaF,EAAuB,EAAvBA,MAAO8C,EAAgB,EAAhBA,MAE9C,OACE,8CAAQ,qBAAKJ,MAAM,YAAYJ,MAAO,CAACK,UAAW,KAA1C,SACN,sBAAcD,MAAM,iBAApB,UACE,qBAAcA,MAAM,WAApB,SACI,uBAAgBK,MAAM,MAAMC,OAAO,MAAMC,UAAQ,EAAjD,SACG,wBAAiBxC,IAAKqC,EAAOvF,KAAK,aAArBK,IADJA,IADNA,GAKV,qBAAc8E,MAAM,WAApB,SACA,sBAAclC,UAAU,YAAxB,UACI,qBAAaA,UAAU,aAAvB,qBAA6CqC,EAAYK,gBAAhDtF,GACT,oBAAY4C,UAAU,YAAtB,UAAkC,wDAAlC,IAAqEN,EAAYiD,UAAU,EAAG,KAAO,MAArG,MAAQvF,GAER,oBAAY4C,UAAU,YAAtB,UAAkC,uDAAlC,IAAoEN,EAApE,MAAQtC,GACP,eAAC,IAAD,CAAM2C,KAAK,IAAaC,UAAU,kBAAlC,UAAoD,6CAApD,IAA4ER,IAAxDpC,KALfA,IADAA,KANFA,aA4BlB,gCACE,qDACA,uBACA,cAAC,IAAD,CAAMwF,GAAG,iBAAT,oCCjBCC,MA3Bf,WACI,OACI,mCACA,sBAAK7C,UAAU,gDAAf,UACA,cAAC,IAAD,CAAMA,UAAU,eAAe4C,GAAG,IAAlC,oBACA,wBAAQ5C,UAAU,iBAAiBjD,KAAK,SAAS,cAAY,WAAW,cAAY,aAAa,gBAAc,YAAY,gBAAc,QAAQ,aAAW,oBAA5J,SACE,sBAAMiD,UAAU,0BAElB,qBAAKA,UAAU,2BAA2B5C,GAAG,YAA7C,SACE,qBAAI4C,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAW4C,GAAG,IAA9B,qBAEF,oBAAI5C,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAW4C,GAAG,iBAA9B,sBAEF,oBAAI5C,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAW4C,GAAG,WAA9B,+B,iBCRR3D,GADY,IAAIC,mBACGC,uBAyIV2D,EAvIO,WACpB,IAAM1E,EAAWC,cACL0E,EAAWC,cAAjBC,KACN,EAA4BpE,aAAY,SAAChC,GAAD,OAAWA,EAAML,UAAjDA,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,QACRwG,EAAYrE,aAAY,SAAChC,GAAD,OAAWA,EAAMqG,WAAzCA,QAEFC,EAAe3G,EAAO4G,QAAO,qBAAGH,OAAoBF,KAAQ,GAElE,EAAmClE,aAAY,SAAChC,GAAD,OAAWA,EAAMU,SAAnDqC,EAAb,EAAQ1C,IAAiB2C,EAAzB,EAAqBzC,GACrB,EAAoCiC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEAjB,qBAAU,WACR,IAAI+E,EAAS7C,SAAS8C,cAAc,oBAEpC,GAAIH,EAAc,CAChB,IAAMI,EAAcL,EACjBd,KAAI,YAAuC,IAApCoB,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACtB,OAAID,EAAeE,SAASP,EAAad,YAAYsB,eAC5CF,EAAaf,cAEf,QAERU,QAAO,SAACQ,GAAD,YAAgBC,GAAPD,KAEfV,EAAQvC,OAAS,GACnB,IAAImD,IAAOT,EAAQ,CACjBU,UAAU,YAAKR,GACfS,SAAU,CACRC,UAAW,aACXC,QAAS,EACTC,SAAU,EACVC,SAAU,OACVC,eAAe,EACfC,gBAAgB,KAKpBnB,GACF5D,EAAc4D,EAAad,YAAYK,iBAExC,CAACS,IAEJ7E,qBAAU,WACJ5B,IACFmB,OAAOiC,SAASC,KAAO,cAExB,CAACrD,IAyBJ,OACE,sBAAKsD,UAAU,YAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,iBAAf,SACGmD,EACC,qCACE,sBAAKnD,UAAU,uBAAf,UACE,qBAAKC,IAAKhB,IAEV,+BACE,kDACA,oDACA,8DAGJ,qBAAKe,UAAU,wBAAf,SACE,sBAAYG,SArCP,SAACC,GAChBA,EAAEC,iBAIF,IAFA,IAAIC,EAAiB,GACfC,EAAOC,SAASC,iBAAiB,gBAC9BC,EAAI,EAAGA,GAAKH,EAAKI,OAAQD,IAC5BH,EAAKG,IACPJ,EAAeM,KAAKL,EAAKG,GAAGG,aAAa,UAI7CzC,EHtByB,SAAC,GAAD,IAAEiE,EAAF,EAAEA,YAAaY,EAAf,EAAeA,KAAKsB,EAApB,EAAoBA,IAApB,8CAA6B,WAAMnG,GAAN,iBAAA2C,EAAA,6DAEhDG,EAAOC,KAAKC,UAAU,CACxBiB,cACAY,OACAsB,QAGIvD,EAAQ,CACZC,QAAU,CACN,eAAiB,qBAV6B,SAchD1C,IAAMiG,IAAI,cAAetD,EAAMF,GACpCvC,MAAK,kBAAIL,EAAS,CAACrB,KAAOd,OAC1B0C,OAAM,SAAAC,GACHR,EACIY,EAAaJ,EAAI0C,SAAS5C,KAAKxB,IAAK0B,EAAI0C,SAASnE,OAAQ,2BAlBX,2CAA7B,sDGuBvBsH,CAAc,CACZpC,YAAa/C,EACboF,SAAUpE,EACViE,IAAKpB,EAAaoB,IAClBtB,KAAMF,MAqBwB4B,OAAO,OAA/B,SACE,sBAAK3E,UAAU,aAAf,UACE,uBAAOwB,QAAQ,OAAf,yBACA,uBACEzE,KAAK,OACL+D,KAAK,aACL1D,GAAG,aACHqE,YAAY,cACZzB,UAAU,OACV0B,MAAOpC,EACDqC,SAjDP,SAACvB,GAAD,OAAOb,EAAca,EAAEwB,OAAOF,UAoD/B,uBAAOF,QAAQ,aAAf,4CAGA,uBACEzE,KAAK,OACL+D,KAAK,OACL1D,GAAG,gBACHqE,YAAY,iBACZzB,UAAU,OACV0B,MAAK,UAAKyB,EAAayB,gBAAgBlC,iBAG/B,uBAAT7C,EACC,qBACEG,UAAU,WACV8B,MAAO,CAAEC,MAAO,MAAOC,UAAW,QAFpC,SAIGpC,IAED,KAEJ,wBAAQmC,MAAM,OAAOD,MAAO,CAAEE,UAAW,QAAU6C,OAAK,EAAxD,6CAON,WCtIN5F,GADY,IAAIC,mBACGC,uBAwFV2F,MAtFf,WACE,IAAY/B,EAAWC,cAAjBC,KACA7E,EAAWC,cAEjB,EAA4BQ,aAAY,SAAChC,GAAD,OAAWA,EAAML,UAAjDA,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,QACVwG,EAAe3G,EAAO4G,QAAO,qBAAGH,OAAoBF,KAAQ,GAC1DG,EAAYrE,aAAY,SAAChC,GAAD,OAAWA,EAAMqG,WAAzCA,QACR,EAA4C7D,mBAAS,IAArD,mBAAOiB,EAAP,KAAuByE,EAAvB,KAEMC,EAAW,SAAC5H,GAAD,OAAQgB,EJ4DC,SAAChB,GAAD,8CAAQ,WAAMgB,GAAN,eAAA2C,EAAA,6DAG5BC,EAAQ,CACZC,QAAU,CACN,eAAiB,qBALW,SAQ9B1C,IAAM0G,OAAO,cAAe,CAC9BvG,KAAK,CAACwG,UAAY9H,IACnB4D,GACFvC,MAAK,kBAAIL,EAAS,CAACrB,KAAOhB,OAC1B4C,OAAM,SAAAC,GACHR,EACIY,EAAaJ,EAAI0C,SAAS5C,KAAKxB,IAAK0B,EAAI0C,SAASnE,YAdrB,2CAAR,sDI5DQgI,CAAa/H,KAsB/C,OApBAkB,qBAAU,WACR,GAAI6E,EAAc,CAChB,IAAMI,EAAcL,EACnBd,KAAI,YAAuC,IAApCoB,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACpB,GAAID,EAAeE,SAASP,EAAad,aACvC,OAAOoB,EAAaf,iBAGvBU,QAAO,SAACF,GAAD,YAAyBW,IAAZX,KAEvB6B,EAAkBxB,MAEnB,CAACJ,IAEJ7E,qBAAU,WACJ3B,IACFkB,OAAOiC,SAASC,KAAO,cAExB,CAACpD,IAGF,sBAAKqD,UAAU,YAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,eAAf,SACGmD,EACC,qCACE,sBAAKnD,UAAU,qBAAf,UACE,qBAAKC,IAAKhB,IAEV,6BAAKkE,EAAad,YAAYK,mBAEhC,sBAAK1C,UAAU,sBAAf,UACE,+BACE,+BACE,wCADF,KACsBmD,EAAad,YAAYK,iBAE/C,+BACE,iDAECpC,EAAeK,OAAS,EACvB,6BACGL,EAAe8B,KAAI,SAACgD,GAAD,OAClB,6BAAKA,SAIT,8BACE,kEAMR,sBAAKpF,UAAU,eAAf,UACE,cAAC,IAAD,CAAM4C,GAAE,yBAAoBO,EAAaF,MAAzC,2BAIA,wBACEjD,UAAU,UACVqF,QAAS,kBAAML,EAAS7B,EAAa+B,YAFvC,oCAUN,qECjEVlH,EAAMI,SLcmB,uCAAK,WAAMA,GAAN,SAAA2C,EAAA,sEAEpBxC,IACDC,IAAI,eACJC,MAAK,SAAA6G,GACFlH,EAAS,CAACrB,KAAOZ,IACjBiC,EAAS,CAACrB,KAAMjB,EAAYkB,QAASsI,EAAI5G,UAE5CC,OAAM,SAAAC,GACJR,EAAUY,EAAaJ,EAAI0C,SAAS5C,KAAKxB,IAAK0B,EAAI0C,SAASnE,YATxC,2CAAL,uDKOVoI,MAlBf,WACE,OACE,cAAC,IAAD,CAAevH,QAAf,SACI,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOwH,KAAK,iBAAiBC,OAAK,EAACC,UAAWtG,IAC9C,cAAC,IAAD,CAAOoG,KAAK,WAAWE,UAAWzD,EAASwD,OAAK,IAChD,cAAC,IAAD,CAAOD,KAAK,uBAAuBC,OAAK,EAACC,UAAWC,IACpD,cAAC,IAAD,CAAOH,KAAK,sBAAsBC,OAAK,EAACC,UAAWZ,IAEjD,cAAC,IAAD,CAAOU,KAAK,IAAIC,OAAK,EAACC,UAAWvH,U,MC/B7CyH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtF,SAASuF,eAAe,W","file":"static/js/main.3aee5edd.chunk.js","sourcesContent":["/* Course token Types */\r\nexport const GET_COURSES = \"GET_COURSES\";\r\nexport const ADD_COURSE = \"ADD_COURSE\";\r\nexport const DELETE_COURSE = \"DELETE_COURSE\";\r\nexport const COURSE_FAIL = \"COURSE_FAIL\";\r\nexport const COURSE_CREATED = \"COURSE_CREATED\";\r\nexport const UPDATE_COURSE = \"UPDATE_COURSE\";\r\n\r\n\r\n\r\n/* Error Types */\r\nexport const LOADING = \"LOADING\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\n\r\n//bscscan\r\nexport const FETCH_ALL = \"FETCH_ALL\";\r\nexport const FETCH_FAIL = \"FETCH_FAIL\";","import { ADD_COURSE, COURSE_CREATED, DELETE_COURSE, UPDATE_COURSE } from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n\r\n    loading:true,\r\n    course:[],\r\n    created: false,\r\n    updated : false,\r\n    deleted : false,\r\n}\r\n\r\nconst courseReducer = (state=initialState, action) =>{\r\n\r\n    switch(action.type){\r\n        \r\n            case ADD_COURSE :\r\n                return{\r\n                    ...state,\r\n                    course:[...state.course,...action.payload]\r\n                };\r\n            case COURSE_CREATED:\r\n                return {\r\n                    ...state,\r\n                    created : true\r\n                };\r\n            case UPDATE_COURSE:\r\n                return {\r\n                    ...state,\r\n                    updated : true\r\n                };\r\n            case DELETE_COURSE :\r\n                return{\r\n                    ...state,\r\n                    deleted : true\r\n                };\r\n            default : \r\n               return     state;\r\n    }\r\n}\r\nexport default courseReducer","\r\nimport { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\n\r\nconst intialState = {\r\n    msg:{},\r\n    status : null,\r\n    id:null,\r\n};\r\n\r\n function errorReducer (state = intialState, action){\r\n    switch(action.type){\r\n\r\n        case GET_ERRORS:\r\n            return{\r\n                msg:action.payload.msg,\r\n                status:action.payload.state,\r\n                id : action.payload.id,\r\n            };\r\n        \r\n            case CLEAR_ERRORS:\r\n                return{\r\n                    msg:{},\r\n                    status : null,\r\n                    id:null,\r\n                };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default errorReducer;\r\n","\r\n\r\nimport { FETCH_ALL, FETCH_FAIL } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    yolo_token : [],\r\n    error : \"\",\r\n}\r\nexport const bscscanReducer=(state = initialState, action)=> {\r\n    switch(action.type){\r\n        case FETCH_ALL : \r\n         return {\r\n             ...state,\r\n             yolo_token:action.payload,\r\n         };\r\n\r\n         case FETCH_FAIL : \r\n            return {\r\n                ...state,\r\n                error : action.error\r\n            }\r\n         default :\r\n         return state\r\n    }\r\n}","import {combineReducers}from 'redux';\r\n\r\n\r\n//reducers\r\n\r\nimport courseReducer from './courseReducers';\r\nimport errorReducer from './errorReducers';\r\nimport { bscscanReducer } from './bscscanReducers';\r\n\r\n\r\n const rootReducer = combineReducers({\r\n   \r\n   course: courseReducer,\r\n   error: errorReducer,\r\n   yolo_token: bscscanReducer \r\n})\r\n\r\nexport default rootReducer\r\n\r\n\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useSelector} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {AvatarGenerator} from 'random-avatar-generator'\r\nimport { fetchDataAsync } from '../store/actions/bscscanAction';\r\nimport { useDispatch, connect } from 'react-redux';\r\n\r\nfunction Home() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(fetchDataAsync());\r\n    }, []);\r\n\r\n    //select from redux\r\n    const {yolo_token} = useSelector((state)=>state.yolo_token);\r\n   // const data = yolo_token.data\r\n    //const {name, price, symbol, price_BNB} = data\r\n    //console.log(name, price, symbol, price_BNB)\r\n   //console.log(data)\r\n    console.log(yolo_token)\r\n\r\n    return (\r\n        <div>\r\n            {/* {yolo_token ? (\r\n                <div class=\"card text-center\">\r\n                <div class=\"card-header\">\r\n                  NAME -  {name}\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">PRICE - {price}</h5>\r\n                  <p class=\"card-text\"> PRICE BNB - {price_BNB}</p>\r\n                  \r\n                  \r\n                </div>\r\n                <div class=\"card-footer text-muted\">\r\n                <p class=\"card-text\"> SYMBOL - {symbol}</p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n                <div> <h3>No token data Available</h3>\r\n                    </div>\r\n            )} */}\r\n        </div>\r\n\r\n        \r\n         )\r\n        }\r\n\r\nexport default Home\r\n","import axios from \"axios\";\r\n\r\nimport { FETCH_ALL, FETCH_FAIL } from \"./types\";\r\n\r\nexport const fetchDataAsync = () => {\r\n    return (dispatch) => {\r\n      axios\r\n       // .get(\"https://jsonplaceholder.typicode.com/users\")\r\n       // .get(\"https://bscscan.com/address/0x10ed43c718714eb63d5aa57b78b54704e256024e\")\r\n        .get(\"https://api.pancakeswap.info/api/v2/tokens/0xd084c5a4a621914ed2992310024d2438dfde5bfd\")\r\n        .then(({ data }) => dispatch({ type: FETCH_ALL, payload: data }))\r\n        .catch((err) => dispatch({ type: FETCH_FAIL, error: err }));\r\n    };\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./types\";\r\n\r\nexport const returnErrors = (msg, id=null, status)=> {\r\n        return{\r\n            type : GET_ERRORS,\r\n            payload : {msg, status, id}\r\n        };\r\n};\r\n\r\n//clear errors\r\n\r\nexport const clearErrors = () => {\r\n    return{\r\n        type: CLEAR_ERRORS,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* Actions */\nimport { createCourse } from \"../../store/actions/courseAction\";\nconst generator = new AvatarGenerator();\nconst avatar = generator.generateRandomAvatar();\n\nconst AdminCourse = () => {\n  const dispatch = useDispatch();\n\n  const [courseName, setCourseName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const { msg: errMsg, id: errID } = useSelector((state) => state.error);\n  const { created } = useSelector((state) => state.course);\n\n  useEffect(() => {\n\n    if (created) {\n      window.location.href = \"/courses\";\n    }\n  }, [created]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let courseStudents = [];\n    const tags = document.querySelectorAll(\".tagify__tag\");\n    for (var i = 0; i <= tags.length; i++) {\n      if (tags[i]) {\n        courseStudents.push(tags[i].getAttribute(\"value\"));\n      }\n    }\n\n    dispatch(createCourse({ name: courseName, price:price, description : description }));\n  };\n\n  return (\n    <div className=\"container\">\n      \n      <div className=\"class__wrapper\">\n        <div className=\"class__wrapper__left\">\n          <img src={avatar} alt=\"Avatar\" />\n\n          <h1>Welcome </h1>\n         \n        </div>\n        <div className=\"class__wrapper__right\">\n          <form {...{ onSubmit }}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Title</label>\n              <input\n                type=\"text\"\n                name=\"coursename\"\n                id=\"coursename\"\n                placeholder=\"title\"\n                className=\"mb-3\"\n                value={courseName}\n                onChange={(e) => setCourseName(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Price</label>\n              <input\n                type=\"text\"\n                name=\"coursename\"\n                id=\"coursename\"\n                placeholder=\"Price\"\n                className=\"mb-3\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Description</label>\n              <textarea\n                type=\"text\"\n                name=\"coursename\"\n                ///cols={10}\n                rows={8}\n                id=\"coursename\"\n                placeholder=\"description\"\n                className=\"mb-3\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n            </div>\n\n            {errID === \"COURSE__ERROR\" ? (\n              <div\n                className=\"err-msgs\"\n                style={{ color: \"red\", marginTop: \"10px\" }}\n              >\n                {errMsg}\n              </div>\n            ) : null}\n\n            <button color=\"dark\" style={{ marginTop: \"1rem\" }}>\n              Create Course\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminCourse;\n","import axios from \"axios\";\r\n\r\n//types\r\nimport { CLEAR_ERRORS, ADD_COURSE, COURSE_FAIL, COURSE_CREATED, UPDATE_COURSE, DELETE_COURSE } from \"./types\";\r\n\r\n//action type\r\nimport { returnErrors} from \"./errorAction\";\r\n\r\n//create course or token\r\n\r\nexport const createCourse = ( {name, price, description}) => async(dispatch)=> {\r\n\r\n            //headers\r\n            const config ={\r\n                headers : {\r\n                    \"content-type\" : \"application/json\",\r\n                },\r\n            };\r\n            //request body\r\n            const body = JSON.stringify({name, price, description})\r\n           await axios\r\n            .post(\"/api/course/create\",body, config)\r\n            .then(({data}) => {\r\n                dispatch({type : CLEAR_ERRORS});\r\n                dispatch({type:ADD_COURSE, payload:[ data]});\r\n                dispatch({type : COURSE_CREATED})\r\n            })\r\n            .catch(err => {\r\n                    dispatch({type : COURSE_FAIL});\r\n                    dispatch(\r\n                        returnErrors(err.response.data.msg, err.response.status, )\r\n                    )\r\n            })\r\n\r\n}\r\n\r\n\r\n//read a course or token\r\n\r\nexport const getCourse = ()=> async(dispatch)=>{\r\n    \r\n    await axios\r\n        .get(\"/api/course\")\r\n        .then(res=>{\r\n            dispatch({type : CLEAR_ERRORS});\r\n            dispatch({type: ADD_COURSE, payload: res.data})\r\n        })\r\n        .catch(err=>{\r\n           dispatch( returnErrors(err.response.data.msg, err.response.status, ))\r\n        })\r\n}\r\n\r\n//update course or token\r\n\r\nexport const updateACourse = ({course_name, slug,uid}) => async(dispatch)=> {\r\n    //request body\r\n    const body = JSON.stringify({\r\n        course_name,\r\n        slug,\r\n        uid,\r\n    });\r\n      //headers\r\n      const config ={\r\n        headers : {\r\n            \"content-type\" : \"application/json\",\r\n        },\r\n    };\r\n\r\n    await axios.put(\"/api/course\", body, config)\r\n    .then(()=>dispatch({type : UPDATE_COURSE}))\r\n    .catch(err=> {\r\n        dispatch(\r\n            returnErrors(err.response.data.msg, err.response.status, \"UPDATE_COURSE_ERROR\" )\r\n        )\r\n    })\r\n\r\n}\r\n\r\n//delete a course token\r\n\r\nexport const deleteCourse = (id) => async(dispatch) => {\r\n\r\n    //headers\r\n  const config ={\r\n    headers : {\r\n        \"content-type\" : \"application/json\",\r\n    },    \r\n}\r\nawait axios.delete('/api/course', {\r\n    data:{course_id : id}\r\n}, config)\r\n.then(()=>dispatch({type : DELETE_COURSE}))\r\n.catch(err=>{\r\n    dispatch(\r\n        returnErrors(err.response.data.msg, err.response.status,  )\r\n    )\r\n})\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nconst Courses = () => {\n  const { course } = useSelector((state) => state.course);\n\n  return (\n    <>\n    {course.length > 0 ? (\n      \n      \n      <div class=\"card mb-3\" style={{maxWwidth: 540}}>\n              {course.map(({ course_name, description, price, video }, id) => {\n            \n                return (\n                  <>      <div class=\"card mb-3\" style={{maxWwidth: 540}}>\n                    <div key={id} class=\"row no-gutters\">\n                      <div key={id} class=\"col-md-4\">\n                          <video key={id} width=\"350\" height=\"250\" controls >\n                             <source key={id} src={video} type=\"video/mp4\"/>\n                          </video>\n                      </div>\n                      <div key={id} class=\"col-md-8\">\n                      <div key={id} className=\"card-body\">\n                          <h5 key={id} className=\"card-title\">Title - {course_name.toUpperCase()}</h5>\n                          <p key={id} className=\"card-text\"><span> Short Desription :-</span> {description.substring(0, 100) + \"...\"} </p>\n                \n                          <p key={id} className=\"card-text\"><span> Long Desription :-</span> {description} </p>\n                           <Link href=\"#\" key={id} className=\"btn btn-primary\"><span> Price :-</span> {price}</Link>\n                          </div>\n                      </div>\n                   </div>\n                   </div>\n                    {/* end */}             \n                  </>\n                );\n              })}\n           \n              \n\n              </div>\n\n\n          ) : (\n            <div>\n              <h3>No Course Available</h3>\n              <br />\n              <Link to=\"/create-course\"> Create a course</Link>\n            </div>\n          )}\n     \n   </>\n  );\n};\n\nexport default Courses;\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction AppNavbar() {\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">Navbar</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/\">Home </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/create-course\">Create</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/courses\">View</Link>\r\n            </li>\r\n         \r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default AppNavbar\r\n","import React, { useEffect, useState } from \"react\";\nimport AppNavbar from \"../AppNavbar\";\nimport Tagify from \"@yaireo/tagify\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport { useParams } from \"react-router-dom\";\n\n/* Actions */\nimport { updateACourse } from \"../../store/actions/courseAction\";\n\n/* Avatar */\nconst generator = new AvatarGenerator();\nconst avatar = generator.generateRandomAvatar();\n\nconst UpdateStudent = () => {\n  const dispatch = useDispatch();\n  let { slug: s_slug } = useParams();\n  const { course, updated } = useSelector((state) => state.course);\n  const { student } = useSelector((state) => state.student);\n\n  const courseDetail = course.filter(({ slug }) => slug === s_slug)[0];\n\n  const { msg: errMsg, id: errID } = useSelector((state) => state.error);\n  const [courseName, setCourseName] = useState(\"\");\n\n  useEffect(() => {\n    var input1 = document.querySelector(\"input[name=tags]\");\n\n    if (courseDetail) {\n      const studentList = student\n        .map(({ student_course, student_name }) => {\n          if (student_course.includes(courseDetail.course_name.toLowerCase())) {\n            return student_name.toUpperCase();\n          }\n          return null;\n        })\n        .filter((std) => std != undefined);\n\n      if (student.length > 0)\n        new Tagify(input1, {\n          whitelist: [...studentList],\n          dropdown: {\n            classname: \"color-blue\",\n            enabled: 0,\n            maxItems: 5,\n            position: \"text\",\n            closeOnSelect: false,\n            highlightFirst: true,\n          },\n        });\n    }\n\n    if (courseDetail) {\n      setCourseName(courseDetail.course_name.toUpperCase());\n    }\n  }, [courseDetail]);\n\n  useEffect(() => {\n    if (updated) {\n      window.location.href = \"/courses\";\n    }\n  }, [updated]);\n\n  const onChange = (e) => setCourseName(e.target.value);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let courseStudents = [];\n    const tags = document.querySelectorAll(\".tagify__tag\");\n    for (var i = 0; i <= tags.length; i++) {\n      if (tags[i]) {\n        courseStudents.push(tags[i].getAttribute(\"value\"));\n      }\n    }\n\n    dispatch(\n      updateACourse({\n        course_name: courseName,\n        students: courseStudents,\n        uid: courseDetail.uid,\n        slug: s_slug,\n      })\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <AppNavbar />\n      <div className=\"class__wrapper\">\n        {courseDetail ? (\n          <>\n            <div className=\"class__wrapper__left\">\n              <img src={avatar} />\n\n              <ul>\n                <li> Update a course</li>\n                <li>Update Course name</li>\n                <li> Add Student to course</li>\n              </ul>\n            </div>\n            <div className=\"class__wrapper__right\">\n              <form {...{ onSubmit }} method=\"post\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Course Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"coursename\"\n                    id=\"coursename\"\n                    placeholder=\"Course Name\"\n                    className=\"mb-3\"\n                    value={courseName}\n                    {...{ onChange }}\n                  />\n\n                  <label htmlFor=\"coursename\">\n                    Assign Courses to this Student\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"tags\"\n                    id=\"assigncourses\"\n                    placeholder=\"Assign Courses\"\n                    className=\"mb-3\"\n                    value={`${courseDetail.course_students.toUpperCase()}`}\n                  />\n\n                  {errID == \"UPDATE_COURSE_ERROR\" ? (\n                    <div\n                      className=\"err-msgs\"\n                      style={{ color: \"red\", marginTop: \"10px\" }}\n                    >\n                      {errMsg}\n                    </div>\n                  ) : null}\n\n                  <button color=\"dark\" style={{ marginTop: \"1rem\" }} block>\n                    Update Course Records\n                  </button>\n                </div>\n              </form>\n            </div>\n          </>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default UpdateStudent;\n","import React, { useEffect, useState } from \"react\";\nimport AppNavbar from \"../AppNavbar\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { deleteCourse } from \"../../store/actions/courseAction\";\n\nconst generator = new AvatarGenerator();\nconst avatar = generator.generateRandomAvatar();\n\nfunction ViewCourse() {\n  let { slug: s_slug } = useParams();\n  const dispatch = useDispatch();\n\n  const { course, deleted } = useSelector((state) => state.course);\n  const courseDetail = course.filter(({ slug }) => slug === s_slug)[0];\n  const { student } = useSelector((state) => state.student);\n  const [courseStudents, setCourseStudents] = useState(\"\");\n\n  const onDelete = (id) => dispatch(deleteCourse(id));\n\n  useEffect(() => {\n    if (courseDetail) {\n      const studentList = student\n      .map(({ student_course, student_name }) => {\n          if (student_course.includes(courseDetail.course_name)) {\n            return student_name.toUpperCase();\n          }\n        })\n        .filter((student) => student !== undefined);\n\n      setCourseStudents(studentList);\n    }\n  }, [courseDetail]);\n\n  useEffect(() => {\n    if (deleted) {\n      window.location.href = \"/courses\";\n    }\n  }, [deleted]);\n\n  return (\n    <div className=\"container\">\n      <AppNavbar />\n      <div className=\"one__student\">\n        {courseDetail ? (\n          <>\n            <div className=\"one__student__left\">\n              <img src={avatar} />\n\n              <h1>{courseDetail.course_name.toUpperCase()}</h1>\n            </div>\n            <div className=\"one__student__right\">\n              <ul>\n                <li>\n                  <span>Name</span>: {courseDetail.course_name.toUpperCase()}\n                </li>\n                <li>\n                  <h3>Course Students</h3>\n\n                  {courseStudents.length > 0 ? (\n                    <ol>\n                      {courseStudents.map((c) => (\n                        <li>{c}</li>\n                      ))}\n                    </ol>\n                  ) : (\n                    <div>\n                      <h6>No Students Assigned Yet</h6>\n                    </div>\n                  )}\n                </li>\n              </ul>\n\n              <div className=\"one__actions\">\n                <Link to={`/course/update/${courseDetail.slug}`}>\n                  Update Course\n                </Link>\n\n                <button\n                  className=\"del-btn\"\n                  onClick={() => onDelete(courseDetail.course_id)}\n                >\n                  Delete Course\n                </button>\n              </div>\n            </div>\n          </>\n        ) : (\n          <h3>Record Unavailable for Course</h3>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ViewCourse;\n","\r\nimport './App.css';\r\nimport{ Provider} from 'react-redux'\r\nimport store from './store/store';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n//styles\r\nimport \"./styles.css\";\r\n\r\n//component\r\nimport Home from './component/Home';\r\n\r\n//store actions\r\n\r\nimport { getCourse } from './store/actions/courseAction';\r\n\r\n/* Courses */\r\nimport AdminCourse from './component/Courses/AdminCourse';\r\n import Courses from \"./component/Courses/Courses\";\r\nimport UpdateCourse from \"./component/Courses/UpdateCourse\";\r\n import ViewCourse from \"./component/Views/ViewCourse\";\r\nimport AppNavbar from './component/AppNavbar';\r\n\r\n//get datas\r\n\r\nstore.dispatch(getCourse());\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider {...{store}}>\r\n        <Router>\r\n          <AppNavbar />\r\n          <Route path=\"/create-course\" exact component={AdminCourse} />\r\n          <Route path=\"/courses\" component={Courses} exact />\r\n          <Route path=\"/course/update/:slug\" exact component={UpdateCourse} /> \r\n          <Route path=\"/about-course/:slug\" exact component={ViewCourse} />\r\n       \r\n            <Route path='/' exact component={Home}/>\r\n        </Router>\r\n        \r\n    </Provider>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}